services:
    php:
        build: .
        container_name: php-container
        restart: on-failure:5
        working_dir: /var/www/
        ports:
            - 9000:9000
        depends_on:
            - db
        volumes:
            - ./:/var/www:cached
            - vendor:/var/www/vendor:cached
        networks:
            - web-network
            - db-network
    db:
        image: mariadb:10.5
        container_name: db-container
        restart: on-failure:5
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        ports:
            - 3306:3306
        volumes:
            - ./docker-compose/mariadb:/docker-entrypoint-initdb.d      # Pour les scripts d'initialisation
            - ./db:/var/lib/mysql                                       # Pour les données de la base de données
        networks:
            - pma-network
            - db-network

    nginx:
        image: nginx:alpine
        container_name: nginx-container
        restart: unless-stopped
        depends_on:
            - db
            - php
        ports:
            - 7000:80
        volumes:
            - ./public:/var/www/public                            # Monté pour l'application web
            - ./docker-compose/nginx/track-time.conf:/etc/nginx/conf.d/default.conf # Configuration de Nginx
            - ./docker-compose/nginx/logs:/var/log/nginx          # Pour les logs de Nginx
        networks:
            - web-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin-container
        restart: unless-stopped
        depends_on:
            - db
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 128M
        ports:
            - 7080:80
        networks:
            - pma-network

volumes:
    vendor:

networks:
    web-network:
        driver: bridge
    pma-network:
        driver: bridge
    db-network:
        driver: bridge
